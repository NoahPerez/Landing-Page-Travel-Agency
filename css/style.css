@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* rotate(0deg); negative goes to the left and positive goes to the right */
    /* divide by 10px */ }
  /* 60%{
        transform: rotate(180deg);
    } */
  80% {
    transform: translateX(1rem);
    /* divide by 10px */ }
  100% {
    opacity: 1;
    transform: translate(0);
    /* If we translate zero it going to look the same as it look (initial state) */ } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
    /*negative goes to the left and positive goes to the right */
    /* divide by 10px */ }
  80% {
    transform: translateX(-1rem);
    /* divide by 10px */ }
  100% {
    opacity: 1;
    transform: translate(0);
    /* If we translate zero it going to look the same as it look (initial state) */ } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
    /*Top to button because is Y positive to move down  */
    /* divide by 10px */ }
  100% {
    opacity: 1;
    transform: translate(0);
    /* If we translate zero it going to look the same as it look (initial state) */ } }

/* this is to not have any padding or margin in any Browsers */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%;
  /* the over all font size to a percentage. The default root is 16px but we don't want that we want. We want 10px so we divided 10 / 16px = 625px multiple by 100 62.5% */ }

/* front will be in the inheritance body  */
body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  /* it`s  1.7 times bigger than predefined line height: */
  color: #777;
  padding: 3rem;
  /* divide: 10px / 30px = 3rem */ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* to hide the shaking of the heading */
  margin-bottom: 6rem;
  /* divide by 10px */ }
  .heading-primary--main {
    display: block;
    /* it takes the entire width also create line breaks */
    font-size: 6rem;
    /* divide by 10px */
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* divide by 10px */
    animation-name: moveInLeft;
    animation-duration: 1.2s;
    animation-timing-function: ease-out;
    /* animation-delay: 3s; */
    /*animation-iteration-count:3; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    /* divide by 10px */
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* divide by 10px */
    animation: moveInRight 1.2s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.btn {
  /* pseudo-classes are a special state of a selector. So we use pseudo-classes to style elements under special conditions */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* divide by 10px */
    display: inline-block;
    /* so it has it own space it is treated as text. It in the text box we add text-align: center; */
    border-radius: 10rem;
    /* divide by 10px */
    transition: all .2s;
    /* it is just writing down all the possibilities, in a short hand */
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    /* to move up it is -3px  */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* divide by 10px */ }
    .btn:hover::after {
      /* this is an after hover effect */
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    /* it is related to the initial link state (btn:link) active it is when we click on the button */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
    /* divide by 10px */ }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    /* this is the after effect pseudo element but we put the effect after behind the button */
    content: "";
    /* need to be in the after btn */
    display: inline-block;
    /* we use inline block because the bottom is also inline block */
    height: 100%;
    /* it is basically treated like the child of the button */
    width: 100%;
    /* it is set as 100% of the width of the button */
    border-radius: 10rem;
    /* divide by 10px */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom .5s ease-in-out .75s;
    animation-fill-mode: backwards;
    /* the style up to zero percent before the animation starts */ }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0px); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .compositionhover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.header {
  height: 95vh;
  /* this should be 95% of the viewpoint height, it will fill 95% of the screen */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /* 0.8 is 80% */
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
  /* clockwise  x y  */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    /* divide by 10px */
    left: 4rem;
    /* divide by 10px  = 4rem*/ }
  .header__logo {
    height: 3.5rem;
    /* divide by 10px */ }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* these are no longer relation to the parent element  */
    transform: translate(-50%, -50%);
    /* x and on Y (epsilon) how much do we want to translate */
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -25vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  /* 0.8 is 80% */
  background-size: cover;
  margin-top: -9rem;
  transform: skewY(-7deg); }
  .section-features > * {
    transform: skewY(7deg); }

/* .logo-box:hover > .logo{
    animation:moveInRight 1.2s ease-out;
} */
