/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* this is to not have any padding or margin in any Browsers */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%;
  /* the over all font size to a percentage. The default root is 16px but we don't want that we want. We want 10px so we divided 10 / 16px = 625px multiple by 100 62.5% */ }

/* front will be in the inheritance body  */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  /* it`s  1.7 times bigger than predefined line height: */
  color: #777;
  padding: 3rem;
  /* divide: 10px / 30px = 3rem */
  box-sizing: border-box; }

.header {
  height: 95vh;
  /* this should be 95% of the viewpoint height, it will fill 95% of the screen */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /* 0.8 is 80% */
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
  /* clockwise  x y  */ }

.header__logo-box {
  position: absolute;
  top: 4rem;
  /* divide by 10px */
  left: 4rem;
  /* divide by 10px  = 4rem*/ }

.header__logo {
  height: 3.5rem;
  /* divide by 10px */ }

/* .logo-box:hover > .logo{
    animation:moveInRight 1.2s ease-out;
} */
.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* these are no longer relation to the parent element  */
  transform: translate(-50%, -50%);
  /* x and on Y (epsilon) how much do we want to translate */
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* to hide the shaking of the heading */
  margin-bottom: 6rem;
  /* divide by 10px */ }

.heading-primary--main {
  display: block;
  /* it takes the entire width also create line breaks */
  font-size: 6rem;
  /* divide by 10px */
  font-weight: 400;
  letter-spacing: 3.5rem;
  /* divide by 10px */
  animation-name: moveInLeft;
  animation-duration: 1.2s;
  animation-timing-function: ease-out;
  /* animation-delay: 3s; */
  /*animation-iteration-count:3; */ }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  /* divide by 10px */
  font-weight: 700;
  letter-spacing: 1.75rem;
  /* divide by 10px */
  animation: moveInRight 1.2s ease-out; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* rotate(0deg); negative goes to the left and positive goes to the right */
    /* divide by 10px */ }
  /* 60%{
        transform: rotate(180deg);
    } */
  80% {
    transform: translateX(1rem);
    /* divide by 10px */ }
  100% {
    opacity: 1;
    transform: translate(0);
    /* If we translate zero it going to look the same as it look (initial state) */ } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
    /*negative goes to the left and positive goes to the right */
    /* divide by 10px */ }
  80% {
    transform: translateX(-1rem);
    /* divide by 10px */ }
  100% {
    opacity: 1;
    transform: translate(0);
    /* If we translate zero it going to look the same as it look (initial state) */ } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
    /*Top to button because is Y positive to move down  */
    /* divide by 10px */ }
  100% {
    opacity: 1;
    transform: translate(0);
    /* If we translate zero it going to look the same as it look (initial state) */ } }

/* pseudo-classes are a special state of a selector. So we use pseudo-classes to style elements under special conditions */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  /* divide by 10px */
  display: inline-block;
  /* so it has it own space it is treated as text. It in the text box we add text-align: center; */
  border-radius: 10rem;
  /* divide by 10px */
  transition: all .2s;
  /* it is just writing down all the possibilities, in a short hand */
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-3px);
  /* to move up it is -3px  */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* divide by 10px */ }

.btn:active {
  transform: translateY(-1px);
  /* it is related to the initial link state (btn:link) active it is when we click on the button */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  /* divide by 10px */ }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn::after {
  /* this is the after effect pseudo element but we put the effect after behind the button */
  content: "";
  /* need to be in the after btn */
  display: inline-block;
  /* we use inline block because the bottom is also inline block */
  height: 100%;
  /* it is basically treated like the child of the button */
  width: 100%;
  /* it is set as 100% of the width of the button */
  border-radius: 10rem;
  /* divide by 10px */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--white::after {
  background-color: #fff; }

.btn:hover::after {
  /* this is an after hover effect */
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: moveInBottom .5s ease-in-out .75s;
  animation-fill-mode: backwards;
  /* the style up to zero percent before the animation starts */ }
