.row{  // the standers now and days are 1140px, divide by 10px because we want rem
   max-width: $grid-width; // max-width to fill in the maxim space available.
   margin: 0 auto; // it a trick to center block elements inside other block element  
  
   &:not(:last-child){  // it select all the elements except the last one ////.row:last-child() // pseudo-class
       margin-bottom:$gutter-vertical;

       @include respond(tab-port){
        margin-bottom: $gutter-vertical-small;
    }
   }

   @include respond(tab-port){
    max-width: 50rem;
    padding:0 3rem;
   }

   @include clearfix;



   // this is an attribute( we take an attribute ), that selects all elements that start with col-. // ^ means start with col-
     // this is a nice way to select all the columns in the same time.

   //[class*="col-"] * means select all the class that parthians this class
   //[class$="col-"] $ any class that ends with col-.
   
   [class^="col-"] {  
   
    float:left;

    &:not(:last-child){
        margin-right: $gutter-horizontal;

        @include respond(tab-port){
            margin-right: 0;
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include respond(tab-port){
        width: 100% !important;
    }
   }  

   .col-1-of-2 {
       width: calc((100% - #{$gutter-horizontal}) / 2); // it needs to be in #{}

   }

   .col-1-of-3{
       width: calc((100% - 2 * #{$gutter-horizontal}) / 3);

   }

   .col-2-of-3{
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});

}

   .col-1-of-4{
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);

}

.col-2-of-4{
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
}

.col-3-of-4{
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
}

}

