.form {
      &__group:not(:last-child) { //not select everything except the last element 
          margin-bottom: 2rem;
    }

    &__input {
       font-size:1.5rem;
       font-family: inherit; // this wil make to inherit the font family because form has it own font family.
       color:inherit;
       padding: 1.5rem 2rem;
       border-radius: 2px;
       background-color: rgba($color-white, .5);
       border:none;
       border-bottom: 3px solid transparent;
       width: 90%;
       box-shadow: 0 1rem 2rem rgba($color-black, .1);

       @include respond(tab-port) {
        width: 100%;
    }
       
       display: block;
       transition: all .3s;
       
       &:focus{
        outline:none;  // take away the focus blue focus default 
        
        border-bottom: 3px solid $color-primary; 
       }

       &:focus:invalid {
       border-bottom: 3px solid $color-secondary-dark;
       }

       &::-webkit-input-placeholder {   // brand new pseudo element // only works in SAfari and Chrome 
        color:$color-grey-dark-2;
       } 

    }

    &__label{
         font-size: 1.2rem;
         font-weight: 700;
         margin-left: 2rem;//
         margin-top: .7rem;//
         display: block;  // if not we will not be able to use this block elements 
         transition: all .3s;
    }

    &__input:placeholder-shown + &__label {   // + direct sibling ( child and child ) General sibling combinator ~ even between other elements
         opacity: 0;
         visibility: hidden;
         transform: translateY(-4rem);
    } 

    &__radio-group {
        width: 40%;
        display: inline-block;
        
        @include respond(tab-port) {
            width: 100%;
            margin-bottom: 2rem;
        }

    }

    &__radio-input{
        display:none;
    }
     

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;
        position: relative;
        padding-left: 4.5rem;
    }

    &__radio-button{
        height: 3rem; //
        width:3rem; //
        border: 5px solid $color-primary;
        border-radius: 50%; //
        display: inline-block; // We use inline-block to define these
        position: absolute; // in order these to work we need to make it relative the parent 
        left: 0;
        top: -.4rem;
         
        &::after{
            content: ""; // every time we use a pseudo we have specify the content // display 
            display:block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute; // in the parent you can also be position absolute it just needs to be specified 
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    &__radio-input:checked ~ &__radio-label &__radio-button::after { // we can use ~ or + // to able to give an opacity to the check radio buttons need to select several siblings
        opacity: 1;
    }
}